<?php
/*
Run on user logout
*/
function supercookie_login_user_logout($account)
{
  global $user;
  $supercookie = supercookie_instance();
  db_query("INSERT INTO `supercookie_sessions` (`scid`, `uid`, `logout`) VALUES (:scid, :uid, 1) ON DUPLICATE KEY UPDATE `uid`=:uid, `logout`=1;", array(
    ':scid' => $supercookie->data,
    ':uid' => $user->uid
  ));
}

/*
Run on user login
*/
function supercookie_login_user_login(&$edit, $account) {
  global $user;
  $supercookie = supercookie_instance();
  db_query("INSERT INTO `supercookie_sessions` (`scid`, `uid`, `logout`) VALUES (:scid, :uid, 0) ON DUPLICATE KEY UPDATE `uid`=:uid, `logout`=0;", array(
    ':scid' => $supercookie->data,
    ':uid' => $user->uid
  ));
}

/*
Run on every page load
*/
function supercookie_login_init()
{
  global $user;
  $supercookie = supercookie_instance();

  $path = isset($_GET['q']) ? $_GET['q'] : '';
  if ($path != 'user/login' && $path != 'user/logout') // skip user login/logout pages
  {
    if (!$user->uid && $supercookie->data)  //Not logged in, but supercookie detected
    {
      $result = db_query("SELECT `uid`, `ip` FROM `supercookie_sessions` WHERE `scid` = :scid AND `logout`!=1 AND `uid`!=1 LIMIT 1", array(
        ':scid' => $supercookie->data
      ));
      $records = $result->fetchAll();

      foreach ($records as $record)
      {
        $targetUser = user_load($record->uid);
        if (user_access("edit own page content", $targetUser))// && $record->ip != ip_address())
          break; // This user has edit access and their IP has changed.  Lets not auto-authenticate.

        $form_state = array("uid" => $record->uid);
        $form_state['uid'] = $record->uid;
        user_login_submit(array(), $form_state);
      }
    }
  }

  if ($supercookie->data && $user->uid) // Only save if both IDs exist
  {
    db_query("INSERT INTO `supercookie_sessions` (`scid`, `uid`, `ip`) VALUES (:scid, :uid, :ip) ON DUPLICATE KEY UPDATE `uid`=:uid, `ip`=:ip;", array(
      ':scid' => $supercookie->data,
      ':uid' => $user->uid,
      ':ip' => ip_address()
    ));
  }
}
